-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_CLIENTES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA CLIENTES
CREATE TABLE CLIENTES (
    IDCLIENTE NUMBER DEFAULT SEQ_CLIENTES.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(20) NOT NULL,
    DIRECCION VARCHAR2(50) NOT NULL,
    TELEFONO VARCHAR2(20) NOT NULL,
    EMAIL VARCHAR2(40) NOT NULL,
    GENERO CHAR(1) NOT NULL,
    PAIS VARCHAR2(30),
    CIUDAD VARCHAR2(30),
    IDUSUARIO NUMBER(10,0),
    USUARIOCREACLIENTES VARCHAR2(50) NOT NULL,
    FECHACREACLIENTES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACION VARCHAR2(50),
    FECHAMODIFICACION DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO CLIENTES(NOMBRE, DIRECCION, TELEFONO, EMAIL, GENERO, USUARIOCREACLIENTES)
    VALUES (
            'CLIENTE' || I, 
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'EMAIL' || I || '@EXAMPLE.COM', 
            CASE WHEN MOD(I, 2) = 0 THEN 'M' ELSE 'F' END, 
            'USUARIOCREACLIENTES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_PRODUCTOS
START WITH 1
INCREMENT BY 1;

-- CREACIÓN DE LA TABLA PRODUCTOS
CREATE TABLE PRODUCTOS (
    IDPRODUCTO NUMBER(10,0) DEFAULT SEQ_PRODUCTOS.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(100 BYTE) NOT NULL,
    DESCRIPCION VARCHAR2(255 BYTE),
    PRECIO NUMBER(10,2) NOT NULL,
    CANTIDADDESTOCK NUMBER(10,2) NOT NULL,
    MARCA VARCHAR2(50 BYTE),
    CATEGORIA VARCHAR2(50 BYTE),
    FECHAREGISTRO DATE DEFAULT SYSDATE NOT NULL,
    USUARIOCREAPRODUCTOS VARCHAR2(50) NOT NULL,
    FECHACREAPRODUCTOS DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONPRODUCTOS VARCHAR2(50),
    FECHAMODIFICACIONPRODUCTOS DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO PRODUCTOS(NOMBRE, DESCRIPCION, PRECIO, CANTIDADDESTOCK, MARCA, USUARIOCREAPRODUCTOS)
    VALUES (
            'PRODUCTO' || I, 
            'DESCRIPCION' || I, 
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2), 
            ROUND(DBMS_RANDOM.VALUE(10, 100), 2), 
            'MARCA' || I,
            'USUARIOCREAPRODUCTOS' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_VENTAS
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA VENTAS
CREATE TABLE VENTAS (
    IDVENTAS NUMBER(10,0) DEFAULT SEQ_VENTAS.NEXTVAL PRIMARY KEY NOT NULL,
    FECHA DATE DEFAULT SYSDATE NOT NULL,
    TOTAL NUMBER(10,2) NOT NULL,
    IDCLIENTE NUMBER(10,0),
    METODOPAGO NUMBER(10,0),
    IDVENDEDOR NUMBER(10,0),
    USUARIOCREAVENTAS VARCHAR2(50) NOT NULL,
    FECHACREAVENTAS DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONVENTAS VARCHAR2(50),
    FECHAMODIFICACIONVENTAS DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO VENTAS(TOTAL, USUARIOCREAVENTAS)
    VALUES (
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2), 
            'USUARIOCREAVENTAS' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_VENDEDORES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA VENDEDORES
CREATE TABLE VENDEDORES (
    IDVENDEDOR NUMBER(10,0) DEFAULT SEQ_VENDEDORES.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(20 BYTE) NOT NULL,
    DIRECCION VARCHAR2(20 BYTE) NOT NULL,
    TELEFONO VARCHAR2(15 BYTE) NOT NULL,
    EMAIL VARCHAR2(20 BYTE) NOT NULL,
    COMISION NUMBER(10,5),
    IDEMPRESA NUMBER(10,0),
    IDUSUARIO NUMBER(10,0),
    HORARIOTRABAJO VARCHAR2(30 BYTE),
    USUARIOCREAVENDEDORES VARCHAR2(50) NOT NULL,
    FECHACREAVENDEDORES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONVENDEDORES VARCHAR2(50),
    FECHAMODIFICACIONVENDEDORES DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO VENDEDORES(NOMBRE, DIRECCION, TELEFONO, EMAIL, COMISION,USUARIOCREAVENDEDORES)
    VALUES (
            'VENDEDOR' || I, 
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'EMAIL' || I || '@EXAMPLE.COM', 
            ROUND(DBMS_RANDOM.VALUE(0.01, 0.05), 5),
            'USUARIOCREAVENDEDORES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_PROVEEDORES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA PROVEEDORES
CREATE TABLE PROVEEDORES (
    IDPROVEEDOR NUMBER(10,0) DEFAULT SEQ_PROVEEDORES.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(20 BYTE) NOT NULL,
    DIRECCION VARCHAR2(20 BYTE) NOT NULL,
    TELEFONO VARCHAR2(15 BYTE) NOT NULL,
    EMAIL VARCHAR2(30 BYTE) NOT NULL,
    CONTACTOPRINCIPAL VARCHAR2(50 BYTE),
    SITIOWEB VARCHAR2(20 BYTE),
    USUARIOCREAPROVEEDORES VARCHAR2(50) NOT NULL,
    FECHACREAPROVEEDORES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONPROVEEDORES VARCHAR2(50),
    FECHAMODIFICACIONPROVEEDORES DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO PROVEEDORES(NOMBRE, DIRECCION, TELEFONO, EMAIL, SITIOWEB, USUARIOCREAPROVEEDORES)
    VALUES (
            'PROVEEDOR' || I, 
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'EMAIL' || I || '@EXAMPLE.COM', 
            'WWW.SITIOWEB' || I || '.COM',
            'USUARIOCREAPROVEEDORES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_COMPRAS
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA COMPRAS
CREATE TABLE COMPRAS (
    IDCOMPRA NUMBER(10,0) DEFAULT SEQ_COMPRAS.NEXTVAL PRIMARY KEY NOT NULL,
    FECHA DATE DEFAULT SYSDATE NOT NULL,
    TOTAL NUMBER(10,2) NOT NULL,
    IDPROVEEDOR NUMBER(10,0),
    METODOPAGO NUMBER(10,0),
    ESTADOCOMPRA VARCHAR2(20 BYTE) NOT NULL,
    USUARIOCREACOMPRAS VARCHAR2(50) NOT NULL,
    FECHACREACOMPRAS DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONCOMPRAS VARCHAR2(50),
    FECHAMODIFICACIONCOMPRAS DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO COMPRAS(TOTAL, ESTADOCOMPRA, USUARIOCREACOMPRAS)
    VALUES (
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2), 
            CASE WHEN MOD(I, 2) = 0 THEN 'PAGADO' ELSE 'PENDIENTE' END,
            'USUARIOCREACOMPRAS' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_COTIZACIONES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA COTIZACIONES
CREATE TABLE COTIZACIONES (
    IDCOTIZACION NUMBER(10,0) DEFAULT SEQ_COTIZACIONES.NEXTVAL PRIMARY KEY NOT NULL,
    FECHA DATE DEFAULT SYSDATE NOT NULL,
    TOTAL NUMBER(10,2) NOT NULL,
    IDCLIENTE NUMBER(10,0),
    ESTADOCOTIZACION VARCHAR2(30 BYTE) NOT NULL,
    FECHAVALIDEZ DATE NOT NULL,
    USUARIOCREACOTIZACIONES VARCHAR2(50) NOT NULL,
    FECHACREACOTIZACIONES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONCOTIZACIONES VARCHAR2(50),
    FECHAMODIFICACIONCOTIZACIONES DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO COTIZACIONES(TOTAL, ESTADOCOTIZACION, FECHAVALIDEZ, USUARIOCREACOTIZACIONES)
    VALUES (
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2), 
            CASE WHEN MOD(I, 2) = 0 THEN 'APROBADO' ELSE 'PENDIENTE' END,
            SYSDATE + ROUND(DBMS_RANDOM.VALUE(1, 30), 0),
            'USUARIOCREACOTIZACIONES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_PUNTOSDEVENTA
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA PUNTOSDEVENTA
CREATE TABLE PUNTOSDEVENTA (
    IDPUNTODEVENTAS NUMBER(10,0) DEFAULT SEQ_PUNTOSDEVENTA.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(30 BYTE) NOT NULL,
    DIRECCION VARCHAR2(30 BYTE) NOT NULL,
    TELEFONO VARCHAR2(15 BYTE) NOT NULL,
    CIUDAD VARCHAR2(30 BYTE) NOT NULL,
    ENCARGADO VARCHAR2(20 BYTE),
    HORARIOATENCION VARCHAR2(30 BYTE),
    USUARIOCREAPUNTOSDEVENTA VARCHAR2(50) NOT NULL,
    FECHACREAPUNTOSDEVENTA DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONPUNTOSDEVENTA VARCHAR2(50),
    FECHAMODIFICACIONPUNTOSDEVENTA DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO PUNTOSDEVENTA(NOMBRE, DIRECCION, TELEFONO, CIUDAD, USUARIOCREAPUNTOSDEVENTA)
    VALUES (
            'PUNTODEVENTA' || I, 
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'CIUDAD' || I,
            'USUARIOCREAPUNTOSDEVENTA' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_SUCURSAL
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA SUCURSAL
CREATE TABLE SUCURSAL (
    IDSUCURSAL NUMBER(10,0) DEFAULT SEQ_SUCURSAL.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(30 BYTE) NOT NULL,
    DIRECCION VARCHAR2(30 BYTE) NOT NULL,
    TELEFONO VARCHAR2(15 BYTE) NOT NULL,
    CIUDAD VARCHAR2(20 BYTE),
    GERENCIASUCURSAL VARCHAR2(20 BYTE) NOT NULL,
    HORARIOATENCION VARCHAR2(30 BYTE),
    USUARIOCREASUCURSAL VARCHAR2(50) NOT NULL,
    FECHACREASUCURSAL DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONSUCURSAL VARCHAR2(50),
    FECHAMODIFICACIONSUCURSAL DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO SUCURSAL(NOMBRE, DIRECCION, TELEFONO, GERENCIASUCURSAL, USUARIOCREASUCURSAL)
    VALUES (
            'SUCURSAL' || I, 
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'GERENCIASUCURSAL' || I,
            'USUARIOCREASUCURSAL' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_EMPRESA
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA EMPRESA
CREATE TABLE EMPRESA (
    IDEMPRESA NUMBER(10,0) DEFAULT SEQ_EMPRESA.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(20 BYTE),
    DIRECCION VARCHAR2(30 BYTE) NOT NULL,
    TELEFONO VARCHAR2(15 BYTE) NOT NULL,
    EMAIL VARCHAR2(30 BYTE) NOT NULL,
    PAIS VARCHAR2(20 BYTE),
    CIUDAD VARCHAR2(30 BYTE),
    RUC VARCHAR2(30 BYTE) NOT NULL,
    USUARIOCREAEMPRESA VARCHAR2(50) NOT NULL,
    FECHACREAEMPRESA DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONEMPRESA VARCHAR2(50),
    FECHAMODIFICACIONEMPRESA DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO EMPRESA(DIRECCION, TELEFONO, EMAIL, RUC, USUARIOCREAEMPRESA)
    VALUES (
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'EMAIL' || I || '@EXAMPLE.COM', 
            'RUC' || I,
            'USUARIOCREAEMPRESA' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_USUARIO
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA USUARIO
CREATE TABLE USUARIO (
    IDUSUARIO NUMBER(10,0) DEFAULT SEQ_USUARIO.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBREUSUARIO VARCHAR2(20 BYTE) NOT NULL,
    PASSWORD VARCHAR2(20 BYTE) NOT NULL,
    FECHAREGISTRO DATE DEFAULT SYSDATE NOT NULL,
    IDROL NUMBER(10,0),
    FECHAMODIFICACION DATE,
    USUARIOCREAUSUARIO VARCHAR2(50) NOT NULL,
    FECHACREAUSUARIO DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONUSUARIO VARCHAR2(50),
    FECHAMODIFICACIONUSUARIO DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO USUARIO(NOMBREUSUARIO, PASSWORD, USUARIOCREAUSUARIO)
    VALUES (
            'USUARIO' || I, 
            'PASSWORD' || I, 
            'USUARIOCREAUSUARIO' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_ROLES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA ROLES
CREATE TABLE ROLES (
    IDROL NUMBER(10,0) DEFAULT SEQ_ROLES.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBREROL VARCHAR2(30 BYTE) NOT NULL,
    FECHAMODIFICACION DATE,
    USUARIOCREAROLES VARCHAR2(50) NOT NULL,
    FECHACREAROLES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONROLES VARCHAR2(50),
    FECHAMODIFICACIONROLES DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO ROLES(NOMBREROL, USUARIOCREAROLES)
    VALUES (
            'ROL' || I, 
            'USUARIOCREAROLES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_COLABORADORES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA COLABORADORES
CREATE TABLE COLABORADORES (
    IDCOLABORADOR NUMBER(10,0) DEFAULT SEQ_COLABORADORES.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(30 BYTE) NOT NULL,
    DIRECCION VARCHAR2(30 BYTE) NOT NULL,
    TELEFONO VARCHAR2(15 BYTE) NOT NULL,
    EMAIL VARCHAR2(20 BYTE) NOT NULL,
    FECHACREACION DATE DEFAULT SYSDATE NOT NULL,
    FECHAMODIFICACION DATE,
    HORAENTRADA VARCHAR2(15 BYTE),
    HORASALIDA VARCHAR2(15 BYTE),
    IDSUCURSAL NUMBER(10,0)NOT NULL,
    USUARIOCREACOLABORADORES VARCHAR2(50) NOT NULL,
    FECHACREACOLABORADORES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONCOLABORADORES VARCHAR2(50),
    FECHAMODIFICACIONCOLABORADORES DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO COLABORADORES(NOMBRE, DIRECCION, TELEFONO, EMAIL, HORAENTRADA, IDSUCURSAL, USUARIOCREACOLABORADORES)
    VALUES (
            'COLABORADOR' || I, 
            'DIRECCION' || I, 
            'TELEFONO' || I, 
            'EMAIL' || I || '@EXAMPLE.COM', 
            TO_CHAR(SYSDATE + ((I-1)/24), 'HH24:MI'),
            I,
            'USUARIOCREACOLABORADORES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_ACCESOS
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA ACCESOS
CREATE TABLE ACCESOS (
    IDACCESO NUMBER(10,0) DEFAULT SEQ_ACCESOS.NEXTVAL PRIMARY KEY NOT NULL,
    FECHAACCESO DATE DEFAULT SYSDATE NOT NULL,
    HORAACCESO VARCHAR2(20 BYTE),
    IDUSUARIO NUMBER(10,0),
    NOMBREUSUARIO VARCHAR2(20 BYTE) NOT NULL,
    USUARIOCREAACCESOS VARCHAR2(50) NOT NULL,
    FECHACREAACCESOS DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONACCESOS VARCHAR2(50),
    FECHAMODIFICACIONACCESOS DATE
);

-- LLENAR LA TABLA CON 500 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..500 LOOP
    INSERT INTO ACCESOS(HORAACCESO, IDUSUARIO, NOMBREUSUARIO, USUARIOCREAACCESOS)
    VALUES (
            TO_CHAR(SYSDATE + ((I-1)/24), 'HH24:MI'), 
            I,
            'USUARIO' || I,
            'USUARIOCREAACCESOS' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_CUADRES
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA CUADRES
CREATE TABLE CUADRES (
    IDCUADRE NUMBER(10,0) DEFAULT SEQ_CUADRES.NEXTVAL PRIMARY KEY NOT NULL,
    FECHAACCESO DATE DEFAULT SYSDATE NOT NULL,
    TOTALEFECTIVO VARCHAR2(30 BYTE),
    TOTALTARJETA VARCHAR2(30 BYTE),
    IDPUNTODEVENTAS NUMBER(10,0),
    USUARIOCREACUADRES VARCHAR2(50) NOT NULL,
    FECHACREACUADRES DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONCUADRES VARCHAR2(50),
    FECHAMODIFICACIONCUADRES DATE
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO CUADRES(TOTALEFECTIVO, TOTALTARJETA, IDPUNTODEVENTAS, USUARIOCREACUADRES)
    VALUES (
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2), 
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2),
            I,
            'USUARIOCREACUADRES' || I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_ORDENESCOMPRA
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA ORDENESCOMPRA
CREATE TABLE ORDENESCOMPRA (
    IDORDEN NUMBER(10,0) DEFAULT SEQ_ORDENESCOMPRA.NEXTVAL PRIMARY KEY NOT NULL,
    FECHAORDEN DATE DEFAULT SYSDATE NOT NULL,
    IDPROVEEDOR NUMBER(10,0),
    IDCLIENTE NUMBER(10,0),
    IDPRODUCTO NUMBER(10,0),
    METODOPAGO NUMBER(10,0),
    CANTIDADPRODUCTO NUMBER(38,0) NOT NULL,
    PRECIOTOTALORDEN NUMBER(10,2) NOT NULL,
    ESTADOORDENESCOMPRA VARCHAR2(20 BYTE) NOT NULL,
    FECHAHORACREACIONORDENESCOMPRA DATE DEFAULT SYSDATE NOT NULL,
    FECHAHORAMODIFICACIONORDENESCOMPRA DATE,
    USUARIOCREACIONORDENESCOMPRA NUMBER(10,0),
    USUARIOMODIFICACIONORDENESCOMPRA NUMBER(10,0)
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO ORDENESCOMPRA(FECHAORDEN, IDPROVEEDOR, IDCLIENTE, IDPRODUCTO, METODOPAGO, CANTIDADPRODUCTO, PRECIOTOTALORDEN, ESTADOORDENESCOMPRA, USUARIOCREACIONORDENESCOMPRA)
    VALUES (
            SYSDATE - ROUND(DBMS_RANDOM.VALUE(1, 365), 0),
            I,
            I,
            I,
            I,
            ROUND(DBMS_RANDOM.VALUE(1, 100), 0),
            ROUND(DBMS_RANDOM.VALUE(100, 10000), 2),
            CASE WHEN MOD(I, 2) = 0 THEN 'PAGADO' ELSE 'PENDIENTE' END,
            I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_FORMAPAGO
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA FORMAPAGO
CREATE TABLE FORMAPAGO (
    IDFORMAPAGO NUMBER(10,0) DEFAULT SEQ_FORMAPAGO.NEXTVAL PRIMARY KEY NOT NULL,
    DESCRIPCIONFORMAPAGO VARCHAR2(30 BYTE) NOT NULL,
    FECHACREACIONFORMAPAGO DATE DEFAULT SYSDATE NOT NULL,
    ESTADOFORMAPAGO VARCHAR2(20 BYTE) NOT NULL,
    DESCUENTOFORMAPAGO NUMBER(3,2),
    LIMITECREDITOFORMAPAGO NUMBER(10,2),
    FECHAHORACREACIONFORMAPAGO DATE DEFAULT SYSDATE NOT NULL,
    FECHAHORAMODIFICACIONFORMAPAGO DATE,
    USUARIOCREACIONFORMAPAGO NUMBER(10,0),
    USUARIOMODIFICACIONFORMAPAGO NUMBER(10,0)
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO FORMAPAGO(DESCRIPCIONFORMAPAGO, ESTADOFORMAPAGO, DESCUENTOFORMAPAGO, LIMITECREDITOFORMAPAGO, USUARIOCREACIONFORMAPAGO)
    VALUES (
            'FORMAPAGO' || I, 
            CASE WHEN MOD(I, 2) = 0 THEN 'ACTIVO' ELSE 'INACTIVO' END,
            ROUND(DBMS_RANDOM.VALUE(0.01, 0.05), 2),
            ROUND(DBMS_RANDOM.VALUE(100, 10000), 2),
            I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_BITACORA
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA BITACORA
CREATE TABLE BITACORA (
    IDBITACORA NUMBER(10,0) DEFAULT SEQ_BITACORA.NEXTVAL PRIMARY KEY NOT NULL,
    FECHAHORABITACORA TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP NOT NULL,
    DESCRIPCIONBITACORA VARCHAR2(30 BYTE),
    IDUSUARIO NUMBER(10,0),
    ACCIONBITACORA VARCHAR2(50 BYTE),
    RESULTADOACCIONBITACORA VARCHAR2(50 BYTE),
    ESTADOBITACORA VARCHAR2(20 BYTE),
    FECHAHORACREACIONBITACORA DATE DEFAULT SYSDATE NOT NULL,
    FECHAHORAMODIFICACIONBITACORA DATE,
    USUARIOCREACIONBITACORA NUMBER(10,0),
    USUARIOMODIFICACIONBITACORA NUMBER(10,0)
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO BITACORA(DESCRIPCIONBITACORA, IDUSUARIO, ACCIONBITACORA, RESULTADOACCIONBITACORA, ESTADOBITACORA, USUARIOCREACIONBITACORA)
    VALUES (
            'DESCRIPCIONBITACORA' || I,
            I,
            'ACCIONBITACORA' || I,
            CASE WHEN MOD(I, 2) = 0 THEN 'EXITOSO' ELSE 'FALLIDO' END,
            CASE WHEN MOD(I, 2) = 0 THEN 'ACTIVO' ELSE 'INACTIVO' END,
            I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_TRASLADOS
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA TRASLADOS
CREATE TABLE TRASLADOS (
    IDTRASLADO NUMBER(10,0) DEFAULT SEQ_TRASLADOS.NEXTVAL PRIMARY KEY NOT NULL,
    FECHATRASLADO DATE DEFAULT SYSDATE NOT NULL,
    IDBODEGAORIGEN NUMBER(10,0),
    IDBODEGADESTINO NUMBER(10,0),
    IDPRODUCTOTRASLADO NUMBER(10,0),
    CANTIDADPRODUCTOTRASLADO NUMBER(38,0) NOT NULL,
    ESTADOTRASLADO VARCHAR2(20 BYTE) NOT NULL,
    FECHAHORACREACIONTRASLADO DATE DEFAULT SYSDATE NOT NULL,
    FECHAHORAMODIFICACIONTRASLADO DATE,
    USUARIOCREACIONTRASLADO NUMBER(10,0),
    USUARIOMODIFICACIONTRASLADO NUMBER(10,0)
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO TRASLADOS(FECHATRASLADO, IDBODEGAORIGEN, IDBODEGADESTINO, IDPRODUCTOTRASLADO, CANTIDADPRODUCTOTRASLADO, ESTADOTRASLADO, USUARIOCREACIONTRASLADO)
    VALUES (
            SYSDATE - ROUND(DBMS_RANDOM.VALUE(1, 365), 0),
            I,
            I,
            I,
            ROUND(DBMS_RANDOM.VALUE(1, 100), 0),
            CASE WHEN MOD(I, 2) = 0 THEN 'COMPLETADO' ELSE 'PENDIENTE' END,
            I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_ENVIOS
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA ENVIOS
CREATE TABLE ENVIOS (
    IDENVIO NUMBER(10,0) DEFAULT SEQ_ENVIOS.NEXTVAL PRIMARY KEY NOT NULL,
    FECHAENVIO DATE DEFAULT SYSDATE NOT NULL,
    IDCLIENTE NUMBER(10,0),
    DIRECCIONENVIO VARCHAR2(20 BYTE) NOT NULL,
    ESTADOENVIO VARCHAR2(20 BYTE) NOT NULL,
    FECHACREACIONENVIO DATE DEFAULT SYSDATE NOT NULL,
    FECHAMODIFICACIONENVIO DATE,
    USUARIOCREACIONENVIO NUMBER(10,0),
    USUARIOMODIFICACIONENVIO NUMBER(10,0)
);

-- LLENAR LA TABLA CON 50 REGISTROS FICTICIOS
BEGIN
  FOR I IN 1..50 LOOP
    INSERT INTO ENVIOS(FECHAENVIO, IDCLIENTE, DIRECCIONENVIO, ESTADOENVIO, USUARIOCREACIONENVIO)
    VALUES (
            SYSDATE - ROUND(DBMS_RANDOM.VALUE(1, 365), 0),
            I,
            'DIRECCIONENVIO' || I,
            CASE WHEN MOD(I, 2) = 0 THEN 'ENTREGADO' ELSE 'PENDIENTE' END,
            I
           );
  END LOOP;
  COMMIT;
END;

-- CREACIÓN DE LA SECUENCIA
CREATE SEQUENCE SEQ_BODEGAS
START WITH 1
INCREMENT BY 1;
-- CREACIÓN DE LA TABLA BODEGAS
CREATE TABLE BODEGAS (
    IDBODEGA NUMBER(10,0) DEFAULT SEQ_BODEGAS.NEXTVAL PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR2(30 BYTE) NOT NULL,
    DIRECCION VARCHAR2(40 BYTE) NOT NULL,
    CIUDAD VARCHAR2(30 BYTE) NOT NULL,
    CAPACIDAD NUMBER(10,2) NOT NULL,
    ENCARGADO VARCHAR2(40 BYTE),
    USUARIOCREABODEGAS VARCHAR2(50) NOT NULL,
    FECHACREABODEGAS DATE DEFAULT SYSDATE NOT NULL,
    USUARIOMODIFICACIONBODEGAS VARCHAR2(50),
    FECHAMODIFICACIONBODEGAS DATE
);

-- Llenar la tabla con 50 registros ficticios
BEGIN
  FOR i IN 1..50 LOOP
    INSERT INTO BODEGAS(NOMBRE, DIRECCION, CIUDAD, CAPACIDAD, USUARIOCREABODEGAS)
    VALUES (
            'Bodega' || i, 
            'Direccion' || i, 
            'Ciudad' || i, 
            ROUND(DBMS_RANDOM.VALUE(100, 1000), 2),
            'UsuarioCreaBodegas' || i
           );
  END LOOP;
  COMMIT;
END;

CREATE TABLE VENTAS_PRODUCTOS (
    IDVENTA NUMBER(10,0),
    IDPRODUCTO NUMBER(10,0),
    PRIMARY KEY (IDVENTA, IDPRODUCTO),
    FOREIGN KEY (IDVENTA) REFERENCES VENTAS(IDVENTAS),
    FOREIGN KEY (IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
);

CREATE TABLE COMPRAS_PRODUCTOS (
    IDCOMPRA NUMBER(10,0),
    IDPRODUCTO NUMBER(10,0),
    PRIMARY KEY (IDCOMPRA, IDPRODUCTO),
    FOREIGN KEY (IDCOMPRA) REFERENCES COMPRAS(IDCOMPRA),
    FOREIGN KEY (IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
);

ALTER TABLE SUCURSAL
ADD CONSTRAINT FK_SUCURSAL_PUNTOSDEVENTA
FOREIGN KEY (IDSUCURSAL) REFERENCES PUNTOSDEVENTA(IDPUNTODEVENTAS);

ALTER TABLE VENTAS
ADD CONSTRAINT FK_VENTAS_FORMAPAGO
FOREIGN KEY (METODOPAGO) REFERENCES FORMAPAGO(IDFORMAPAGO);

ALTER TABLE COMPRAS
ADD CONSTRAINT FK_COMPRAS_FORMAPAGO
FOREIGN KEY (METODOPAGO) REFERENCES FORMAPAGO(IDFORMAPAGO);

ALTER TABLE COTIZACIONES
ADD CONSTRAINT FK_COTIZACIONES_CLIENTES
FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTES(IDCLIENTE);

ALTER TABLE ACCESOS
ADD CONSTRAINT FK_ACCESOS_USUARIO
FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO);

ALTER TABLE ENVIOS
ADD CONSTRAINT FK_ENVIOS_CLIENTES
FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTES(IDCLIENTE);

ALTER TABLE TRASLADOS
ADD CONSTRAINT FK_TRASLADOS_BODEGASORIGEN
FOREIGN KEY (IDBODEGAORIGEN) REFERENCES BODEGAS(IDBODEGA);

ALTER TABLE TRASLADOS
ADD CONSTRAINT FK_TRASLADOS_BODEGASDESTINO
FOREIGN KEY (IDBODEGADESTINO) REFERENCES BODEGAS(IDBODEGA);

ALTER TABLE BITACORA
ADD CONSTRAINT FK_BITACORA_USUARIO
FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO);

ALTER TABLE USUARIO
ADD CONSTRAINT FK_USUARIO_ROLES
FOREIGN KEY (IDROL) REFERENCES ROLES(IDROL);

ALTER TABLE COLABORADORES
ADD CONSTRAINT FK_COLABORADORES_SUCURSAL
FOREIGN KEY (IDSUCURSAL) REFERENCES SUCURSAL(IDSUCURSAL);

ALTER TABLE VENTAS
ADD CONSTRAINT FK_VENTAS_COTIZACIONES
FOREIGN KEY (IDVENTAS) REFERENCES COTIZACIONES(IDCOTIZACION);

ALTER TABLE PRODUCTOS
ADD CONSTRAINT FK_PRODUCTOS_PROVEEDORES
FOREIGN KEY (IDPRODUCTO) REFERENCES PROVEEDORES(IDPROVEEDOR);

CREATE TABLE BODEGAS_PRODUCTOS (
    IDBODEGA NUMBER(10,0),
    IDPRODUCTO NUMBER(10,0),
    PRIMARY KEY (IDBODEGA, IDPRODUCTO),
    FOREIGN KEY (IDBODEGA) REFERENCES BODEGAS(IDBODEGA),
    FOREIGN KEY (IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
);

ALTER TABLE SUCURSAL
ADD CONSTRAINT FK_SUCURSAL_EMPRESA
FOREIGN KEY (IDSUCURSAL) REFERENCES EMPRESA(IDEMPRESA);

ALTER TABLE VENTAS
ADD CONSTRAINT FK_VENTAS_USUARIO
FOREIGN KEY (IDVENTAS) REFERENCES USUARIO(IDUSUARIO);

ALTER TABLE COMPRAS
ADD CONSTRAINT FK_COMPRAS_USUARIO
FOREIGN KEY (IDCOMPRA) REFERENCES USUARIO(IDUSUARIO);

ALTER TABLE BODEGAS
ADD CONSTRAINT FK_BODEGAS_SUCURSAL
FOREIGN KEY (IDBODEGA) REFERENCES SUCURSAL(IDSUCURSAL);

ALTER TABLE VENTAS
ADD CONSTRAINT FK_VENTAS_PUNTOSDEVENTA
FOREIGN KEY (IDVENTAS) REFERENCES PUNTOSDEVENTA(IDPUNTODEVENTAS);

ALTER TABLE COMPRAS
ADD CONSTRAINT FK_COMPRAS_PUNTOSDEVENTA
FOREIGN KEY (IDCOMPRA) REFERENCES PUNTOSDEVENTA(IDPUNTODEVENTAS);

ALTER TABLE VENTAS
ADD CONSTRAINT FK_VENTAS_VENDEDORES
FOREIGN KEY (IDVENDEDOR) REFERENCES VENDEDORES(IDVENDEDOR);

ALTER TABLE CUADRES
ADD CONSTRAINT FK_CUADRES_PUNTOSDEVENTA
FOREIGN KEY (IDPUNTODEVENTAS) REFERENCES PUNTOSDEVENTA(IDPUNTODEVENTAS);

CREATE TABLE CUADRES_VENTAS (
    IDCUADRE NUMBER(10,0),
    IDVENTA NUMBER(10,0),
    PRIMARY KEY (IDCUADRE, IDVENTA),
    FOREIGN KEY (IDCUADRE) REFERENCES CUADRES(IDCUADRE),
    FOREIGN KEY (IDVENTA) REFERENCES VENTAS(IDVENTAS)
);

ALTER TABLE ORDENESCOMPRA
ADD CONSTRAINT FK_ORDENESCOMPRA_CLIENTES
FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTES(IDCLIENTE);

ALTER TABLE ORDENESCOMPRA
ADD CONSTRAINT FK_ORDENESCOMPRA_PRODUCTOS
FOREIGN KEY (IDCLIENTE) REFERENCES PRODUCTOS(IDPRODUCTO);

ALTER TABLE ORDENESCOMPRA
ADD CONSTRAINT FK_ORDENESCOMPRA_FORMAPAGO
FOREIGN KEY (METODOPAGO) REFERENCES FORMAPAGO(IDFORMAPAGO);

ALTER TABLE ORDENESCOMPRA
ADD CONSTRAINT FK_ORDENESCOMPRA_PROVEEDORES
FOREIGN KEY (IDPROVEEDOR) REFERENCES PROVEEDORES(IDPROVEEDOR);

ALTER TABLE VENDEDORES
ADD CONSTRAINT FK_VENDEDORES_EMPRESA
FOREIGN KEY (IDEMPRESA) REFERENCES EMPRESA(IDEMPRESA);

CREATE TABLE TRASLADOS_PRODUCTOS (
    IDTRASLADO NUMBER(10,0),
    IDPRODUCTO NUMBER(10,0),
    PRIMARY KEY (IDTRASLADO, IDPRODUCTO),
    FOREIGN KEY (IDTRASLADO) REFERENCES TRASLADOS(IDTRASLADO),
    FOREIGN KEY (IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
);

ALTER TABLE CLIENTES
ADD CONSTRAINT FK_CLIENTES_USUARIO
FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO);

ALTER TABLE VENDEDORES
ADD CONSTRAINT FK_VENDEDORES_USUARIO
FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO);
